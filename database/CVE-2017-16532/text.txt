static int\nget_endpoints(struct usbtest_dev *dev, struct usb_interface *intf)\n{\n\rint\rtmp;\n\rstruct usb_host_interface\r*alt;\n\rstruct usb_host_endpoint\r*in, *out;\n\rstruct usb_host_endpoint\r*iso_in, *iso_out;\n\rstruct usb_host_endpoint\r*int_in, *int_out;\n\rstruct usb_device\r*udev;\n\n\rfor (tmp = 0; tmp < intf->num_altsetting; tmp++) {\n\runsigned\rep;\n\n\rin = out = NULL;\n\riso_in = iso_out = NULL;\n\rint_in = int_out = NULL;\n\ralt = intf->altsetting + tmp;\n\n\rif (override_alt >= 0 &&\n\roverride_alt != alt->desc.bAlternateSetting)\n\rcontinue;\n\n\r/* take the first altsetting with in-bulk + out-bulk;\n\r * ignore other endpoints and altsettings.\n\r */\n\rfor (ep = 0; ep < alt->desc.bNumEndpoints; ep++) {\n\rstruct usb_host_endpoint\r*e;\n\rint edi;\n\n\re = alt->endpoint + ep;\n\redi = usb_endpoint_dir_in(&e->desc);\n\n\rswitch (usb_endpoint_type(&e->desc)) {\n\rcase USB_ENDPOINT_XFER_BULK:\n\rendpoint_update(edi, &in, &out, e);\n\rcontinue;\n\rcase USB_ENDPOINT_XFER_INT:\n\rif (dev->info->intr)\n\rendpoint_update(edi, &int_in, &int_out, e);\n\rcontinue;\n\rcase USB_ENDPOINT_XFER_ISOC:\n\rif (dev->info->iso)\n\rendpoint_update(edi, &iso_in, &iso_out, e);\n\r/* FALLTHROUGH */\n\rdefault:\n\rcontinue;\n\r}\n\r}\n\rif ((in && out)  ||  iso_in || iso_out || int_in || int_out)\n\rgoto found;\n\r}\n\rreturn -EINVAL;\n\nfound:\n\rudev = testdev_to_usbdev(dev);\n\rdev->info->alt = alt->desc.bAlternateSetting;\n\rif (alt->desc.bAlternateSetting != 0) {\n\rtmp = usb_set_interface(udev,\n\ralt->desc.bInterfaceNumber,\n\ralt->desc.bAlternateSetting);\n\rif (tmp < 0)\n\rreturn tmp;\n\r}\n\n\rif (in) {\n\rdev->in_pipe = usb_rcvbulkpipe(udev,\n\rin->desc.bEndpointAddress & USB_ENDPOINT_NUMBER_MASK);\n\rdev->out_pipe = usb_sndbulkpipe(udev,\n\rout->desc.bEndpointAddress & USB_ENDPOINT_NUMBER_MASK);\n\r}\n\rif (iso_in) {\n\rdev->iso_in = &iso_in->desc;\n\rdev->in_iso_pipe = usb_rcvisocpipe(udev,\n\riso_in->desc.bEndpointAddress\n\r& USB_ENDPOINT_NUMBER_MASK);\n\r}\n\n\rif (iso_out) {\n\rdev->iso_out = &iso_out->desc;\n\rdev->out_iso_pipe = usb_sndisocpipe(udev,\n\riso_out->desc.bEndpointAddress\n\r& USB_ENDPOINT_NUMBER_MASK);\n\r}\n\n\rif (int_in) {\n\rdev->int_in = &int_in->desc;\n\rdev->in_int_pipe = usb_rcvintpipe(udev,\n\rint_in->desc.bEndpointAddress\n\r& USB_ENDPOINT_NUMBER_MASK);\n\r}\n\n\rif (int_out) {\n\rdev->int_out = &int_out->desc;\n\rdev->out_int_pipe = usb_sndintpipe(udev,\n\rint_out->desc.bEndpointAddress\n\r& USB_ENDPOINT_NUMBER_MASK);\n\r}\n\rreturn 0;\n}
