    std::ostream& resolveLens0x319(std::ostream& os, const Value& value,
                                                 const ExifData* metadata)
    // ----------------------------------------------------------------------
    {
        try {
            unsigned long index  = 0;

            const ExifData::const_iterator lensInfo = findLensInfo(metadata);
            if ( value.count() == 4 ) {
                std::string model       = getKeyString("Exif.Image.Model"      ,metadata);
                if ( model.rfind("PENTAX K-3", 0)==0 && lensInfo->count() == 128 && lensInfo->toLong(1) == 131 && lensInfo->toLong(2) == 128 )
                    index = 6;
            }
            if ( value.count() == 2 ) {
                std::string model       = getKeyString("Exif.Image.Model"      ,metadata);
                if ( model.rfind("PENTAX K100D", 0)==0 && lensInfo->count() == 44 )
                    index = 6;
                if ( model.rfind("PENTAX *ist DL", 0)==0 && lensInfo->count() == 36 )
                    index = 6;
            }

            if ( index > 0 )  {
                const unsigned long lensID = 0x319;
                const TagDetails* td = find(pentaxLensType, lensID);
                os << exvGettext(td[index].label_);
                return os;
            }
        } catch (...) {}
        return EXV_PRINT_COMBITAG_MULTI(pentaxLensType, 2, 1, 2)(os, value, metadata);
    }
