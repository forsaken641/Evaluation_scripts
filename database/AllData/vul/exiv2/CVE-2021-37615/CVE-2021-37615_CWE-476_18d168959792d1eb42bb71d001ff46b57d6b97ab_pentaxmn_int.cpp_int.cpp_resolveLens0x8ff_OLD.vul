    std::ostream& resolveLens0x8ff(std::ostream& os, const Value& value,
                                                 const ExifData* metadata)
    // ----------------------------------------------------------------------
    {
        try {
            unsigned long index  = 0;

            const ExifData::const_iterator lensInfo = metadata->findKey(ExifKey("Exif.PentaxDng.LensInfo")) != metadata->end()
                                                    ? metadata->findKey(ExifKey("Exif.PentaxDng.LensInfo"))
                                                    : metadata->findKey(ExifKey("Exif.Pentax.LensInfo"))
                                                    ;
            if ( value.count() == 4 ) {
                std::string model       = getKeyString("Exif.Image.Model"      ,metadata);
                if ( model.rfind("PENTAX K-3", 0)==0 && lensInfo->count() == 128 && lensInfo->toLong(1) == 168 && lensInfo->toLong(2) == 144 ) index = 7;
            }

            if ( index > 0 )  {
                const unsigned long lensID = 0x8ff;
                const TagDetails* td = find(pentaxLensType, lensID);
                os << exvGettext(td[index].label_);
                return os;
            }
        } catch (...) {}
        return EXV_PRINT_COMBITAG_MULTI(pentaxLensType, 2, 1, 2)(os, value, metadata);
    }
