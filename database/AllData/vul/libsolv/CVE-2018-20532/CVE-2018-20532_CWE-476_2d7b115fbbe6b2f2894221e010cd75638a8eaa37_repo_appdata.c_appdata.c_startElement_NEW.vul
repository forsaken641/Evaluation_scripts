static void
startElement(struct solv_xmlparser *xmlp, int state, const char *name, const char **atts)
{
  struct parsedata *pd = xmlp->userdata;
  Pool *pool = pd->pool;
  Solvable *s;
  const char *type;

  /* ignore all language tags */
  if (pd->skiplang || solv_xmlparser_find_attr("xml:lang", atts))
    {
      pd->skiplang++;
      return;
    }

  switch(state)
    {
    case STATE_APPLICATION:
      type = solv_xmlparser_find_attr("type", atts);
      if (!type || !*type)
        type = "desktop";
      if (strcmp(type, "desktop") != 0)
	{
	  /* ignore for now */
	  pd->solvable = 0;
	  break;
	}
      s = pd->solvable = pool_id2solvable(pool, repo_add_solvable(pd->repo));
      pd->handle = s - pool->solvables;
      pd->havesummary = 0;
      repodata_set_poolstr(pd->data, pd->handle, SOLVABLE_CATEGORY, type);
      break;
    case STATE_DESCRIPTION:
      pd->description = solv_free(pd->description);
      break;
    case STATE_OL:
    case STATE_UL:
      pd->licnt = 0;
      break;
    default:
      break;
    }
}
