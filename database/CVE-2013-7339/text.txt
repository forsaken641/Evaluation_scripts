static int rds_ib_laddr_check(__be32 addr)\n{\n\rint ret;\n\rstruct rdma_cm_id *cm_id;\n\rstruct sockaddr_in sin;\n\n\r/* Create a CMA ID and try to bind it. This catches both\n\r * IB and iWARP capable NICs.\n\r */\n\rcm_id = rdma_create_id(NULL, NULL, RDMA_PS_TCP, IB_QPT_RC);\n\rif (IS_ERR(cm_id))\n\rreturn PTR_ERR(cm_id);\n\n\rmemset(&sin, 0, sizeof(sin));\n\rsin.sin_family = AF_INET;\n\rsin.sin_addr.s_addr = addr;\n\n\r/* rdma_bind_addr will only succeed for IB & iWARP devices */\n\rret = rdma_bind_addr(cm_id, (struct sockaddr *)&sin);\n\r/* due to this, we will claim to support iWARP devices unless we\n\r   check node_type. */\n\rif (ret || cm_id->device->node_type != RDMA_NODE_IB_CA)\n\rret = -EADDRNOTAVAIL;\n\n\rrdsdebug("addr %pI4 ret %d node type %d\n",\n\r&addr, ret,\n\rcm_id->device ? cm_id->device->node_type : -1);\n\n\rrdma_destroy_id(cm_id);\n\n\rreturn ret;\n}
